{"ast":null,"code":"var _jsxFileName = \"/home/milan/dsm/src/components/CheckBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"../styles/toggle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckBox = _ref => {\n  _s();\n  let {\n    onCheckboxChange,\n    label,\n    disText\n  } = _ref;\n  //check if checked\n\n  const [isChecked, setIsChecked] = useState(false);\n  const handleCheckboxChange = event => {\n    setIsChecked(!isChecked);\n    onCheckboxChange(event);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: label,\n        onChange: handleCheckboxChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), label]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      class: isChecked ? \"disclaimer-text\" : \"hidden\",\n      children: disText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(CheckBox, \"IqwjskjINf25CGxiIwnERX6nsyk=\");\n_c = CheckBox;\nexport default CheckBox;\nvar _c;\n$RefreshReg$(_c, \"CheckBox\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CheckBox","_ref","_s","onCheckboxChange","label","disText","isChecked","setIsChecked","handleCheckboxChange","event","children","type","id","onChange","fileName","_jsxFileName","lineNumber","columnNumber","class","_c","$RefreshReg$"],"sources":["/home/milan/dsm/src/components/CheckBox.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport \"../styles/toggle.css\"\n\nconst CheckBox = ({onCheckboxChange,label,disText}) => {\n    //check if checked\n\n    const [isChecked,setIsChecked] =useState(false)\n    const handleCheckboxChange = (event) => {\n      setIsChecked(!isChecked);\n      onCheckboxChange(event);\n    };\n\n  return (\n    <div>\n        <label>\n            <input\n            type=\"checkbox\"\n            id={label}\n            onChange={handleCheckboxChange}/>\n            {label}\n        </label>\n        <p class={isChecked?\"disclaimer-text\":\"hidden\"}>{disText}</p>\n    </div>\n  )\n}\n\nexport default CheckBox"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,QAAQ,GAAGC,IAAA,IAAsC;EAAAC,EAAA;EAAA,IAArC;IAACC,gBAAgB;IAACC,KAAK;IAACC;EAAO,CAAC,GAAAJ,IAAA;EAC9C;;EAEA,MAAM,CAACK,SAAS,EAACC,YAAY,CAAC,GAAEV,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMW,oBAAoB,GAAIC,KAAK,IAAK;IACtCF,YAAY,CAAC,CAACD,SAAS,CAAC;IACxBH,gBAAgB,CAACM,KAAK,CAAC;EACzB,CAAC;EAEH,oBACEV,OAAA;IAAAW,QAAA,gBACIX,OAAA;MAAAW,QAAA,gBACIX,OAAA;QACAY,IAAI,EAAC,UAAU;QACfC,EAAE,EAAER,KAAM;QACVS,QAAQ,EAAEL;MAAqB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,EAChCb,KAAK;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF,eACRlB,OAAA;MAAGmB,KAAK,EAAEZ,SAAS,GAAC,iBAAiB,GAAC,QAAS;MAAAI,QAAA,EAAEL;IAAO;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC3D;AAEV,CAAC;AAAAf,EAAA,CArBKF,QAAQ;AAAAmB,EAAA,GAARnB,QAAQ;AAuBd,eAAeA,QAAQ;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}