{"ast":null,"code":"var _jsxFileName = \"/home/milan/dsm/src/components/Search.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport CheckBox from \"./CheckBox\";\nimport \"../styles/search.css\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Search(props) {\n  _s();\n  const [selectedValues, setSelectedValues] = useState({\n    \"Blu\": 0,\n    \"Bluetoot\": 0\n  });\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  // \n  const [result, setResults] = useState({\n    \"disease\": \"gregthtrhr\",\n    \"per\": 0,\n    \"test\": \"sxdcfvgbjhnmkl\"\n  });\n  const [showCheckBoxes, setShowCheckBoxes] = useState(false);\n  const handleCheckboxChange = event => {\n    const {\n      id,\n      checked\n    } = event.target;\n    setSelectedValues(prevState => ({\n      ...prevState,\n      [id]: checked ? 1 : 0 // set value to 1 if checked, 0 otherwise\n    }));\n  };\n\n  console.log(selectedValues);\n  const submit = async () => {\n    const response = await axios.post('/', selectedValues);\n    console.log(response.data);\n    setResults({\n      \"disease\": response.ans,\n      \"per\": response.ans_prob,\n      \"test\": response.test\n    });\n  };\n  //handlesubmit for transfering the data to the backend once the submit button clicked\n  const handleSubmit = event => {\n    event.preventDefault();\n    // const checkboxArray = Object.values(selectedValues);\n\n    // console.log(checkboxArray)\n    submit();\n    setSearchResults({});\n\n    // send checkboxArray using axios\n  };\n\n  const handleSearch = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  // const handleCheckbox = () => {\n  //   setIsChecked(!isChecked);\n  // };\n  const handleSearchBarClick = () => {\n    setShowCheckBoxes(!showCheckBoxes);\n  };\n  useEffect(() => {\n    // Here, you would typically make an API call to fetch the data for the checkboxes\n    // For simplicity, we will create an array of items here\n    const items = [{\n      id: 1,\n      value: \"Blu\",\n      desc: \"Desc1\"\n    }, {\n      id: 2,\n      value: \"Bluetoot\",\n      desc: \"Desc2\"\n    }, {\n      id: 3,\n      value: \"Bluetooth\",\n      desc: \"Desc3\"\n    }, {\n      id: 4,\n      value: \"Wifif\",\n      desc: \"Desc4\"\n    }, {\n      id: 5,\n      value: \"Item 5\",\n      desc: \"Desc5\"\n    }];\n    const results = items.filter(item => item.value.toLowerCase().includes(searchTerm.toLowerCase()));\n    setSearchResults(results);\n  }, [searchTerm]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"searchbox\",\n      onClick: handleSearchBarClick,\n      type: \"text\",\n      placeholder: \"Write down your symptoms...\",\n      value: searchTerm,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [searchResults.map(item => showCheckBoxes && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(CheckBox, {\n            onCheckboxChange: handleCheckboxChange,\n            label: item.value,\n            disText: item.desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submitbtn\",\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this), fi]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 7\n  }, this);\n}\n_s(Search, \"IMTl4mNrVyIOCCf8bWkPLI9ejwM=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useEffect","useState","CheckBox","axios","jsxDEV","_jsxDEV","Search","props","_s","selectedValues","setSelectedValues","searchTerm","setSearchTerm","searchResults","setSearchResults","result","setResults","showCheckBoxes","setShowCheckBoxes","handleCheckboxChange","event","id","checked","target","prevState","console","log","submit","response","post","data","ans","ans_prob","test","handleSubmit","preventDefault","handleSearch","value","handleSearchBarClick","items","desc","results","filter","item","toLowerCase","includes","className","children","onClick","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onCheckboxChange","label","disText","fi","_c","$RefreshReg$"],"sources":["/home/milan/dsm/src/components/Search.jsx"],"sourcesContent":["import React,{useEffect,useState} from \"react\"\nimport CheckBox from \"./CheckBox\";\nimport \"../styles/search.css\"\nimport axios from 'axios';\n\nfunction Search(props) {\n    const [selectedValues,setSelectedValues] =useState({\"Blu\":0,\"Bluetoot\":0})\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [searchResults, setSearchResults] = useState([]);\n    // \n    const [result,setResults] = useState({\"disease\": \"gregthtrhr\",\"per\": 0 , \"test\":\"sxdcfvgbjhnmkl\" })\n    const [showCheckBoxes,setShowCheckBoxes] =useState(false)\n    const handleCheckboxChange = (event) => {\n        const { id, checked } = event.target;\n        setSelectedValues((prevState) => ({\n      ...prevState,\n      [id]: checked ? 1 : 0, // set value to 1 if checked, 0 otherwise\n    }));\n      };\n    console.log(selectedValues)\n\n    const submit = async() => {\n      const response=await axios.post('/',\n          selectedValues\n      );\n      console.log(response.data)\n      setResults({\"disease\": response.ans ,\"per\":response.ans_prob, \"test\":response.test})\n    }\n    //handlesubmit for transfering the data to the backend once the submit button clicked\n    const handleSubmit = event => {\n      event.preventDefault();\n        // const checkboxArray = Object.values(selectedValues);\n\n        // console.log(checkboxArray)\n          submit();\n          setSearchResults({})\n\n        // send checkboxArray using axios\n      };\n  \n    const handleSearch = (event) => {\n      setSearchTerm(event.target.value);\n    };\n  \n    // const handleCheckbox = () => {\n    //   setIsChecked(!isChecked);\n    // };\n    const handleSearchBarClick = ()=>{\n        setShowCheckBoxes(!showCheckBoxes)\n    }\n  \n\n    useEffect(() => {\n      // Here, you would typically make an API call to fetch the data for the checkboxes\n      // For simplicity, we will create an array of items here\n      const items = [\n        { id: 1, value: \"Blu\" ,desc:\"Desc1\"},\n        { id: 2, value: \"Bluetoot\", desc:\"Desc2\" },\n        { id: 3, value: \"Bluetooth\",desc:\"Desc3\" },\n        { id: 4, value: \"Wifif\",desc:\"Desc4\"},\n        { id: 5, value: \"Item 5\",desc:\"Desc5\"},\n      ];\n  \n      const results = items.filter((item) =>\n        item.value.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n  \n      setSearchResults(results);\n    }, [searchTerm]);\n  \n    return (\n      <div className=\"container\">\n        <input\n          className=\"searchbox\"\n          onClick={handleSearchBarClick}\n          type=\"text\"\n          placeholder=\"Write down your symptoms...\"\n          value={searchTerm}\n          onChange={handleSearch}\n        />\n        {searchResults.length > 0 && (\n          <div>\n            <div className=\"container\">\n            {searchResults.map((item) => (\n              (showCheckBoxes && (\n                <div key={item.id}>\n                    <CheckBox onCheckboxChange={handleCheckboxChange} label={item.value} disText={item.desc}/>\n                </div>))\n            ))}\n            <button className=\"submitbtn\" onClick={handleSubmit} >Submit</button>\n            </div>\n          </div>\n        )}\n        {fi}\n      </div>\n    );\n  }\n\n  export default Search"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}